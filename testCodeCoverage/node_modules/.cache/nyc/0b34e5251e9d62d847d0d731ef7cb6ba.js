/* jslint node: true */ /* jshint esversion: 6 */'use strict';var cov_o0d0hczo3=function(){var path="/Users/junaid/Documents/gitRepos/nodePlayground/mochaTests/testCodeCoverage/src/test/index.spec.js",hash="e6b685de32c57a08b75614d1e5bb97cb0d2a609d",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/junaid/Documents/gitRepos/nodePlayground/mochaTests/testCodeCoverage/src/test/index.spec.js",statementMap:{"0":{start:{line:4,column:16},end:{line:4,column:37}},"1":{start:{line:5,column:15},end:{line:5,column:32}},"2":{start:{line:7,column:0},end:{line:33,column:3}},"3":{start:{line:9,column:1},end:{line:21,column:4}},"4":{start:{line:10,column:2},end:{line:12,column:5}},"5":{start:{line:11,column:3},end:{line:11,column:9}},"6":{start:{line:14,column:2},end:{line:16,column:5}},"7":{start:{line:15,column:3},end:{line:15,column:16}},"8":{start:{line:18,column:2},end:{line:20,column:5}},"9":{start:{line:19,column:3},end:{line:19,column:16}},"10":{start:{line:23,column:1},end:{line:27,column:4}},"11":{start:{line:24,column:2},end:{line:26,column:5}},"12":{start:{line:25,column:3},end:{line:25,column:14}},"13":{start:{line:29,column:1},end:{line:32,column:4}},"14":{start:{line:30,column:17},end:{line:30,column:26}},"15":{start:{line:31,column:2},end:{line:31,column:41}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:30},end:{line:7,column:31}},loc:{start:{line:7,column:41},end:{line:33,column:1}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:52},end:{line:9,column:53}},loc:{start:{line:9,column:64},end:{line:21,column:2}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:10,column:16},end:{line:10,column:17}},loc:{start:{line:10,column:22},end:{line:12,column:3}},line:10},"3":{name:"(anonymous_3)",decl:{start:{line:14,column:16},end:{line:14,column:17}},loc:{start:{line:14,column:22},end:{line:16,column:3}},line:14},"4":{name:"(anonymous_4)",decl:{start:{line:18,column:16},end:{line:18,column:17}},loc:{start:{line:18,column:22},end:{line:20,column:3}},line:18},"5":{name:"(anonymous_5)",decl:{start:{line:23,column:65},end:{line:23,column:66}},loc:{start:{line:23,column:77},end:{line:27,column:2}},line:23},"6":{name:"(anonymous_6)",decl:{start:{line:24,column:22},end:{line:24,column:23}},loc:{start:{line:24,column:28},end:{line:26,column:3}},line:24},"7":{name:"(anonymous_7)",decl:{start:{line:29,column:45},end:{line:29,column:46}},loc:{start:{line:29,column:57},end:{line:32,column:2}},line:29}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{add}=(cov_o0d0hczo3.s[0]++,require('./../index'));const assert=(cov_o0d0hczo3.s[1]++,require('assert'));cov_o0d0hczo3.s[2]++;describe('Function Add Test',function(){cov_o0d0hczo3.f[0]++;cov_o0d0hczo3.s[3]++;it("Should throw expections on missing arguments",function(){cov_o0d0hczo3.f[1]++;cov_o0d0hczo3.s[4]++;assert.throws(()=>{cov_o0d0hczo3.f[2]++;cov_o0d0hczo3.s[5]++;add();});cov_o0d0hczo3.s[6]++;assert.throws(()=>{cov_o0d0hczo3.f[3]++;cov_o0d0hczo3.s[7]++;add(null,1);});cov_o0d0hczo3.s[8]++;assert.throws(()=>{cov_o0d0hczo3.f[4]++;cov_o0d0hczo3.s[9]++;add(2,null);});});cov_o0d0hczo3.s[10]++;it("Should not throw expection when both arguments are passed",function(){cov_o0d0hczo3.f[5]++;cov_o0d0hczo3.s[11]++;assert.doesNotThrow(()=>{cov_o0d0hczo3.f[6]++;cov_o0d0hczo3.s[12]++;add(2,34);});});cov_o0d0hczo3.s[13]++;it("Should return 11 for argument 5 and 6",function(){cov_o0d0hczo3.f[7]++;const result=(cov_o0d0hczo3.s[14]++,add(5,6));cov_o0d0hczo3.s[15]++;assert.equal(result,11,"add failed");});});